{"ast":null,"code":"var _jsxFileName = \"/Users/larry/REACTMI/random/src/components/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { initialNames } from '../initialNames';\nimport { GitHubCorner } from './GitHubCorner/GitHubCorner';\nimport { Header } from './Header/Header';\nimport { AddListItem } from './AddListItem';\nimport { List } from './List';\nimport { PickRandomListItem } from './PickRandomListItem';\nimport { Footer } from './Footer/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [names, setNames] = useState(initialNames);\n  const [pickedName, setPickedName] = useState(\"\");\n\n  const addName = newName => {\n    newName.trim() !== \"\" && setNames([{\n      id: uuidv4(),\n      text: newName\n    }, ...names]);\n    setPickedName(\"\");\n  };\n\n  const removeName = id => {\n    setNames(names.filter(name => name.id !== id));\n  };\n\n  const pickName = () => {\n    let mutatedNames = names;\n\n    const recursivePickName = () => {\n      if (mutatedNames.length !== 0) {\n        const randomName = mutatedNames[Math.floor(Math.random() * mutatedNames.length)];\n\n        if (randomName.text.toUpperCase() === pickedName.toUpperCase()) {\n          mutatedNames = mutatedNames.filter(name => name.text !== randomName.text);\n          recursivePickName();\n        } else {\n          setPickedName(randomName.text);\n        }\n      } else {\n        setPickedName(\"\");\n        alert(\"\\\"The same name should not be picked twice in a row\\\" criteria cannot be met.\");\n      }\n    };\n\n    recursivePickName();\n  };\n\n  useEffect(() => {\n    console.clear();\n    console.log('\\nDeveloped by Ali Tursucular\\n\\nLinkedIn: https://www.linkedin.com/in/alitursucular/\\nPersonal Portfolio: https://alitursucular.github.io');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app mt-5 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"app_list\",\n            children: [/*#__PURE__*/_jsxDEV(AddListItem, {\n              addName: addName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              names: names,\n              removeName: removeName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), names.length !== 0 && /*#__PURE__*/_jsxDEV(PickRandomListItem, {\n            pickName: pickName,\n            pickedName: pickedName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GitHubCorner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"J8FmajzrH438A6V+/x6uLIEluLw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/larry/REACTMI/random/src/components/App.tsx"],"names":["React","useState","useEffect","v4","uuidv4","initialNames","GitHubCorner","Header","AddListItem","List","PickRandomListItem","Footer","App","names","setNames","pickedName","setPickedName","addName","newName","trim","id","text","removeName","filter","name","pickName","mutatedNames","recursivePickName","length","randomName","Math","floor","random","toUpperCase","alert","console","clear","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { initialNames } from '../initialNames';\nimport { GitHubCorner } from './GitHubCorner/GitHubCorner';\nimport { Header } from './Header/Header';\nimport { AddListItem } from './AddListItem';\nimport { List } from './List';\nimport { PickRandomListItem } from './PickRandomListItem';\nimport { Footer } from './Footer/Footer';\n\nconst App = () => {\n  const [names, setNames] = useState(initialNames);\n  const [pickedName, setPickedName] = useState(\"\");\n\n  const addName: AddName = newName => {\n    newName.trim() !== \"\" &&\n      setNames([{ id: uuidv4(), text: newName }, ...names]);\n    setPickedName(\"\");\n  }\n\n  const removeName: RemoveName = id => {\n    setNames(names.filter(name => name.id !== id));\n  }\n\n  const pickName: PickName = () => {\n    let mutatedNames = names;\n\n    const recursivePickName = () => {\n      if (mutatedNames.length !== 0) {\n        const randomName = mutatedNames[Math.floor(Math.random() * mutatedNames.length)];\n\n        if (randomName.text.toUpperCase() === pickedName.toUpperCase()) {\n          mutatedNames = mutatedNames.filter(name => name.text !== randomName.text);\n          recursivePickName();\n        } else {\n          setPickedName(randomName.text);\n        }\n      } else {\n        setPickedName(\"\");\n        alert(\"\\\"The same name should not be picked twice in a row\\\" criteria cannot be met.\");\n      }\n    }\n\n    recursivePickName();\n  }\n\n  useEffect(() => {\n    console.clear();\n    console.log('\\nDeveloped by Ali Tursucular\\n\\nLinkedIn: https://www.linkedin.com/in/alitursucular/\\nPersonal Portfolio: https://alitursucular.github.io');\n  }, [])\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"app mt-5 mb-4\">\n          <Header />\n          <main>\n            <div className=\"app_list\">\n              <AddListItem addName={addName} />\n              <List names={names} removeName={removeName} />\n            </div>\n            {names.length !== 0 && (\n              <PickRandomListItem pickName={pickName} pickedName={pickedName} />\n            )}\n            <Footer />\n          </main>\n        </div>\n      </div>\n      <GitHubCorner />\n    </>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}