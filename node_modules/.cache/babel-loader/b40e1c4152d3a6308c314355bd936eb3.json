{"ast":null,"code":"var _jsxFileName = \"/Users/larry/REACTMI/random/src/components/App.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState, useEffect } from 'react';\n// import { v4 as uuidv4 } from 'uuid';\n// import { initialNames } from '../initialNames';\n// import { GitHubCorner } from './GitHubCorner/GitHubCorner';\n// import { Header } from './Header/Header';\n// import { AddListItem } from './AddListItem';\n// import { List } from './List';\n// import { PickRandomListItem } from './PickRandomListItem';\n// import { Footer } from './Footer/Footer';\n// const App: React.FC = () => {\n//   const [names, setNames] = useState(initialNames);\n//   const [pickedName, setPickedName] = useState(\"\");\n//   const addName: AddName = newName => {\n//     newName.trim() !== \"\" &&\n//       setNames([{ id: uuidv4(), text: newName }, ...names]);\n//     setPickedName(\"\");\n//   }\n//   const removeName: RemoveName = id => {\n//     setNames(names.filter(name => name.id !== id));\n//   }\n//   const pickName: PickName = () => {\n//     let mutatedNames = names;\n//     const recursivePickName = () => {\n//       if (mutatedNames.length !== 0) {\n//         const randomName = mutatedNames[Math.floor(Math.random() * mutatedNames.length)];\n//         if (randomName.text.toUpperCase() === pickedName.toUpperCase()) {\n//           mutatedNames = mutatedNames.filter(name => name.text !== randomName.text);\n//           recursivePickName();\n//         } else {\n//           setPickedName(randomName.text);\n//         }\n//       } else {\n//         setPickedName(\"\");\n//         alert(\"\\\"The same name should not be picked twice in a row\\\" criteria cannot be met.\");\n//       }\n//     }\n//     recursivePickName();\n//   }\n//   useEffect(() => {\n//     console.clear();\n//     console.log('\\nDeveloped by Ali Tursucular\\n\\nLinkedIn: https://www.linkedin.com/in/alitursucular/\\nPersonal Portfolio: https://alitursucular.github.io');\n//   }, [])\n//   return (\n//     <>\n//       <div className=\"container\">\n//         <div className=\"app mt-5 mb-4\">\n//           <Header />\n//           <main>\n//             <div className=\"app_list\">\n//               <AddListItem addName={addName} />\n//               <List names={names} removeName={removeName} />\n//             </div>\n//             {names.length !== 0 && (\n//               <PickRandomListItem pickName={pickName} pickedName={pickedName} />\n//             )}\n//             <Footer />\n//           </main>\n//         </div>\n//       </div>\n//       <GitHubCorner />\n//     </>\n//   )\n// }\n// export default App;\nimport React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { preStoredNames } from '../data';\nimport { Header } from './Header/Header';\nimport { AddNewMembers } from './AddNewMembers';\nimport { MemberList } from './MemberList';\nimport { PickRandomListItem } from './PickRandomListItem';\nimport { Footer } from './Footer/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [names, setNames] = useState(preStoredNames);\n  const [pickedName, setPickedName] = useState(\"\");\n\n  function addMember(newMemberName) {\n    newMemberName.trim() !== \"\" && setNames([{\n      hhhh,\n      id: uuidv4(),\n      memberName: newMemberName\n    }, ...names]);\n    setPickedName(\"\");\n  }\n\n  function deleteName(id) {\n    setNames(names.filter(name => name.id !== id));\n  }\n\n  function pickName() {\n    let mutatedNames = names;\n\n    function recursivePickName() {\n      if (mutatedNames.length !== 0) {\n        const randomName = mutatedNames[Math.floor(Math.random() * mutatedNames.length)];\n\n        if (randomName.memberName.toUpperCase() === pickedName.toUpperCase()) {\n          mutatedNames = mutatedNames.filter(name => name.memberName !== randomName.memberName);\n          recursivePickName();\n        } else {\n          setPickedName(randomName.memberName);\n        }\n      } else {\n        setPickedName(\"\");\n        alert(\"\\\"The same name should not be picked twice in a row\\\" criteria cannot be met.\");\n      }\n    }\n\n    recursivePickName();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app mt-5 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"app_list\",\n            children: [/*#__PURE__*/_jsxDEV(AddNewMembers, {\n              addMember: addMember\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MemberList, {\n              names: names,\n              deleteName: deleteName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), names.length !== 0 && /*#__PURE__*/_jsxDEV(PickRandomListItem, {\n            pickName: pickName,\n            pickedName: pickedName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"e1wNhOuHZFE82s0Aq7bwjj/zM70=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/larry/REACTMI/random/src/components/App.js"],"names":["React","useState","v4","uuidv4","preStoredNames","Header","AddNewMembers","MemberList","PickRandomListItem","Footer","App","names","setNames","pickedName","setPickedName","addMember","newMemberName","trim","hhhh","id","memberName","deleteName","filter","name","pickName","mutatedNames","recursivePickName","length","randomName","Math","floor","random","toUpperCase","alert"],"mappings":"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","sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { v4 as uuidv4 } from 'uuid';\n\n// import { initialNames } from '../initialNames';\n// import { GitHubCorner } from './GitHubCorner/GitHubCorner';\n// import { Header } from './Header/Header';\n// import { AddListItem } from './AddListItem';\n// import { List } from './List';\n// import { PickRandomListItem } from './PickRandomListItem';\n// import { Footer } from './Footer/Footer';\n\n// const App: React.FC = () => {\n//   const [names, setNames] = useState(initialNames);\n//   const [pickedName, setPickedName] = useState(\"\");\n\n//   const addName: AddName = newName => {\n//     newName.trim() !== \"\" &&\n//       setNames([{ id: uuidv4(), text: newName }, ...names]);\n//     setPickedName(\"\");\n//   }\n\n//   const removeName: RemoveName = id => {\n//     setNames(names.filter(name => name.id !== id));\n//   }\n\n//   const pickName: PickName = () => {\n//     let mutatedNames = names;\n\n//     const recursivePickName = () => {\n//       if (mutatedNames.length !== 0) {\n//         const randomName = mutatedNames[Math.floor(Math.random() * mutatedNames.length)];\n\n//         if (randomName.text.toUpperCase() === pickedName.toUpperCase()) {\n//           mutatedNames = mutatedNames.filter(name => name.text !== randomName.text);\n//           recursivePickName();\n//         } else {\n//           setPickedName(randomName.text);\n//         }\n//       } else {\n//         setPickedName(\"\");\n//         alert(\"\\\"The same name should not be picked twice in a row\\\" criteria cannot be met.\");\n//       }\n//     }\n\n//     recursivePickName();\n//   }\n\n//   useEffect(() => {\n//     console.clear();\n//     console.log('\\nDeveloped by Ali Tursucular\\n\\nLinkedIn: https://www.linkedin.com/in/alitursucular/\\nPersonal Portfolio: https://alitursucular.github.io');\n//   }, [])\n\n//   return (\n//     <>\n//       <div className=\"container\">\n//         <div className=\"app mt-5 mb-4\">\n//           <Header />\n//           <main>\n//             <div className=\"app_list\">\n//               <AddListItem addName={addName} />\n//               <List names={names} removeName={removeName} />\n//             </div>\n//             {names.length !== 0 && (\n//               <PickRandomListItem pickName={pickName} pickedName={pickedName} />\n//             )}\n//             <Footer />\n//           </main>\n//         </div>\n//       </div>\n//       <GitHubCorner />\n//     </>\n//   )\n// }\n\n// export default App;\n\n\n\n\n\n\n\nimport React, { useState} from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { preStoredNames} from '../data';\nimport { Header } from './Header/Header';\nimport { AddNewMembers } from './AddNewMembers';\nimport { MemberList } from './MemberList';\nimport { PickRandomListItem } from './PickRandomListItem';\nimport { Footer } from './Footer/Footer';\n\nfunction App(){\n  const [names, setNames] = useState(preStoredNames);\n  const [pickedName, setPickedName] = useState(\"\");\n\n  function addMember(newMemberName){\n    newMemberName.trim() !== \"\" &&\n      setNames([{hhhh, id: uuidv4(), memberName: newMemberName }, ...names]);\n    setPickedName(\"\");\n  }\n\n  function deleteName(id) {\n    setNames(names.filter(name => name.id !== id));\n  }\n\n  function pickName() {\n    let mutatedNames = names;\n\n    function recursivePickName(){\n      if (mutatedNames.length !== 0) {\n        const randomName = mutatedNames[Math.floor(Math.random() * mutatedNames.length)];\n\n         if (randomName.memberName.toUpperCase() === pickedName.toUpperCase()) {\n           mutatedNames = mutatedNames.filter(name => name.memberName !== randomName.memberName);\n           recursivePickName();\n         } else {\n           setPickedName(randomName.memberName);\n         }\n      } else {\n        setPickedName(\"\");\n        alert(\"\\\"The same name should not be picked twice in a row\\\" criteria cannot be met.\");\n      }\n    }\n\n    recursivePickName();\n  }\n\n  \n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"app mt-5 mb-4\">\n          <Header />\n          <main>\n            <div className=\"app_list\">\n              <AddNewMembers addMember={addMember} />\n              <MemberList names={names} deleteName={deleteName} />\n            </div>\n            {names.length !== 0 && (\n              <PickRandomListItem pickName={pickName} pickedName={pickedName} />\n            )}\n            <Footer />\n          </main>\n        </div>\n      </div>\n  \n    </>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}