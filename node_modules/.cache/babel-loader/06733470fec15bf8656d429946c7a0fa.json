{"ast":null,"code":"var _jsxFileName = \"/Users/larry/REACTMI/random/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { preStoredNames } from '../data';\nimport { Header } from './Header/Header';\nimport { AddNewMembers } from './AddNewMembers';\nimport { MemberList } from './MemberList';\nimport { PickerButton } from './PickerButton';\nimport { Footer } from './Footer/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [names, setNames] = useState(preStoredNames);\n  const [pickedName, setPickedName] = useState(\"\");\n\n  function addMember(newMemberName) {\n    newMemberName.trim() !== \"\" && setNames([{\n      id: uuidv4(),\n      memberName: newMemberName\n    }, ...names]);\n    setPickedName(\"\");\n  }\n\n  function deleteName(id) {\n    setNames(names.filter(name => name.id !== id));\n  }\n\n  function pickName() {\n    function recursivePickName() {\n      if (names.length !== 0) {\n        const randomName = names[Math.floor(Math.random() * names.length)];\n        let filteredNames = names;\n        const exist = randomName.memberName.toUpperCase() === pickedName.toUpperCase();\n\n        if (exist) {\n          filteredNames = names.filter(name => name.memberName !== randomName.memberName);\n          recursivePickName();\n        } else {\n          setPickedName(randomName.memberName);\n        }\n      } else {\n        setPickedName(\"\");\n        alert(\"\\\"The same name should not be picked twice in a row\\\" Invalid State!\");\n      }\n    }\n\n    recursivePickName();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app mt-5 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"app_list\",\n            children: [/*#__PURE__*/_jsxDEV(AddNewMembers, {\n              addMember: addMember\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MemberList, {\n              names: names,\n              deleteName: deleteName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), names.length !== 0 && /*#__PURE__*/_jsxDEV(PickerButton, {\n            pickName: pickName,\n            pickedName: pickedName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"e1wNhOuHZFE82s0Aq7bwjj/zM70=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/larry/REACTMI/random/src/components/App.js"],"names":["React","useState","v4","uuidv4","preStoredNames","Header","AddNewMembers","MemberList","PickerButton","Footer","App","names","setNames","pickedName","setPickedName","addMember","newMemberName","trim","id","memberName","deleteName","filter","name","pickName","recursivePickName","length","randomName","Math","floor","random","filteredNames","exist","toUpperCase","alert"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { preStoredNames} from '../data';\nimport { Header } from './Header/Header';\nimport { AddNewMembers } from './AddNewMembers';\nimport { MemberList } from './MemberList';\nimport { PickerButton } from './PickerButton';\nimport { Footer } from './Footer/Footer';\n\nfunction App(){\n  const [names, setNames] = useState(preStoredNames);\n  const [pickedName, setPickedName] = useState(\"\");\n\n  function addMember(newMemberName){\n    newMemberName.trim() !== \"\" &&\n      setNames([{ id: uuidv4(), memberName: newMemberName }, ...names]);\n    setPickedName(\"\");\n  }\n\n  function deleteName(id) {\n    setNames(names.filter(name => name.id !== id));\n  }\n\n  function pickName() {\n     \n\n    function recursivePickName(){\n        if (names.length !== 0) {\n          const randomName = names[Math.floor(Math.random() * names.length)];\n          let filteredNames = names;\n          const exist = randomName.memberName.toUpperCase() === pickedName.toUpperCase()\n          if (exist) {\n            filteredNames = names.filter(name => name.memberName !== randomName.memberName);\n            recursivePickName();\n          } else {\n            setPickedName(randomName.memberName);\n          }\n        } else {\n        setPickedName(\"\");\n        alert(\"\\\"The same name should not be picked twice in a row\\\" Invalid State!\");\n      }\n    }\n\n    recursivePickName();\n  }\n\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"app mt-5 mb-4\">\n          <Header />\n          <main>\n            <div className=\"app_list\">\n              <AddNewMembers addMember={addMember} />\n              <MemberList names={names} deleteName={deleteName} />\n            </div>\n            {names.length !== 0 && (\n              <PickerButton pickName={pickName} pickedName={pickedName} />)\n            }\n            <Footer />\n          </main>\n        </div>\n      </div>\n  \n    </div>\n  )\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}